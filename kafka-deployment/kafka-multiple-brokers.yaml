apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: digitalwonderland/zookeeper
          ports:
            - containerPort: 2181
          env:
            - name: ZOOKEEPER_ID
              value: "1"
            - name: ZOOKEEPER_SERVER_1
              value: zookeeper
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  labels:
    app: zookeeper
spec:
  ports:
    - name: client
      port: 2181
      protocol: TCP
    - name: follower
      port: 2888
      protocol: TCP
    - name: leader
      port: 3888
      protocol: TCP
  selector:
    app: zookeeper
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-broker-0-np
  labels:
    name: kafka-nodeport
    id: "0"
spec:
  type: NodePort
  ports:
    - port: 9092
      name: kafka-port-0
      targetPort: 9092
      nodePort: 30701
      protocol: TCP
  selector:
    app: kafka
    type: broker
    id: "0"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-broker-1-np
  labels:
    name: kafka-nodeport
    id: "1"
spec:
  type: NodePort
  ports:
    - port: 9092
      name: kafka-port-1
      targetPort: 9092
      nodePort: 30702
      protocol: TCP
  selector:
    app: kafka
    type: broker
    id: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-broker-0-svc-cip
  labels:
    name: kafka-clusterip
    id: "0"
spec:
  type: ClusterIP
  ports:
    - port: 9092
      name: kafka-port
      targetPort: 9092
      protocol: TCP
  selector:
    app: kafka
    type: broker
    id: "0"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-broker-1-svc-cip
  labels:
    name: kafka-clusterip
    id: "1"
spec:
  type: ClusterIP
  ports:
    - port: 9092
      name: kafka-port
      targetPort: 9092
      protocol: TCP
  selector:
    app: kafka
    type: broker
    id: "1"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-broker-0-pv-claim
  labels:
    app: kafka
    type: broker
    id: "0"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-broker-1-pv-claim
  labels:
    app: kafka
    type: broker
    id: "1"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: kafka-broker-0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
      type: broker
  template:
    metadata:
      labels:
        app: kafka
        type: broker
        id: "0"
    spec:
      containers:
        - name: kafka
          image: wurstmeister/kafka
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_ADVERTISED_PORT
              value: "30701"
            - name: KAFKA_ADVERTISED_HOST_NAME
              value: 192.168.0.15
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_BROKER_ID
              value: "0"
          volumeMounts:
            - name: kafka-0-broker-logs
              mountPath: /kafka
      volumes:
        - name: kafka-0-broker-logs
          persistentVolumeClaim:
            claimName: kafka-broker-0-pv-claim
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: kafka-broker-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
      type: broker
      id: "1"
  template:
    metadata:
      labels:
        app: kafka
        type: broker
        id: "1"
    spec:
      containers:
        - name: kafka
          image: wurstmeister/kafka
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_ADVERTISED_PORT
              value: "30702"
            - name: KAFKA_ADVERTISED_HOST_NAME
              value: 192.168.0.15
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_BROKER_ID
              value: "1"
          volumeMounts:
            - name: kafka-1-broker-logs
              mountPath: /kafka
      volumes:
        - name: kafka-1-broker-logs
          persistentVolumeClaim:
            claimName: kafka-broker-1-pv-claim
